{"version":3,"file":"static/js/450.315baeed.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.js","redux/contacts/selector.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts/ContactsPage.styled.js","pages/Contacts/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 5px;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1;\n  color: rgba(255, 255, 255, 1);\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 10px;\n  border-radius: 3px;\n  height: 22px;\n  padding: 0 10px;\n  border: none;\n\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 0.8;\n`;\n\nexport const Button = styled.button`\n  width: 150px;\n  height: 30px;\n  margin: 0 auto 30px auto;\n  cursor: pointer;\n\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 0.8;\n  color: rgba(255, 255, 255, 1);\n\n  background-color: #0151012e;\n  border: 2px solid rgba(255, 255, 255, 1);\n  border-radius: 5px;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: -2px -1px 24px 1px rgba(255, 255, 255, 1);\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.contacts.items;\n\nexport const getFilter = state => state.contacts.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filters) => {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filters.toLowerCase());\n    });\n  }\n);\n","import { useState } from 'react';\nimport { Form, Label, Input, Button } from './ContactsForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selector';\nimport { nanoid } from 'nanoid';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const Phonebook = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contactList = useSelector(getContacts);\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const addNewContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    handleCheck(addNewContact);\n    setName('');\n    setNumber('');\n  };\n\n  const handleCheck = addNewContact => {\n    contactList.find(\n      contact => contact.name.toLowerCase() === addNewContact.name.toLowerCase()\n    )\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact(addNewContact));\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label for=\"user_name\">Name</Label>\n      <Input\n        id=\"user_name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <Label for=\"user_tel\">Number</Label>\n\n      <Input\n        id=\"user_tel\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\">Add Contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 5px;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1;\n  color: rgba(255, 255, 255, 1);\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 10px;\n  border-radius: 3px;\n  height: 22px;\n  padding: 0 10px;\n  border: none;\n\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 0.8;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { filterContacts } from 'redux/contacts/contactsSlice';\nimport { Form, Label, Input } from './Filter.styled';\nimport { getFilter } from 'redux/contacts/selector';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handelChange = evt => dispatch(filterContacts(evt.currentTarget.value));\n  return (\n    <Form>\n      <Label for=\"filter\">Find contacts by name</Label>\n\n      <Input\n        id=\"filter\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handelChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  width: 100%;\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 0.8;\n`;\n\nexport const Button = styled.button`\n  text-align: center;\n  width: 70px;\n  height: 20px;\n\n  cursor: pointer;\n\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 0.8;\n  color: rgba(255, 255, 255, 1);\n\n  background-color: #0151012e;\n  border: 2px solid rgba(255, 255, 255, 1);\n  border-radius: 5px;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: -2px -1px 24px 1px rgba(255, 255, 255, 1);\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selector';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { List, Item, Button } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContactList = useSelector(selectVisibleContacts);\n  return (\n    <List>\n      {filteredContactList.map(({ id, name, number }) => (\n        <Item key={id}>\n          {name} : {number}\n          <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: #014101a8;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  margin: 10vw auto 0 auto;\n  width: 300px;\n  height: 100%;\n\n  border-radius: 10px;\n  box-shadow: 5px 11px 18px -10px rgba(97, 165, 255, 0.88);\n`;\n\nexport const Title = styled.h1`\n  margin: 0 0 15px 0;\n  text-align: center;\n  font-size: 26px;\n  font-weight: 600;\n  line-height: 1;\n  color: #ffbaba;\n`;\n\nexport const Subtitle = styled.h2`\n  margin: 0 0 15px 0;\n  text-align: center;\n  font-size: 22px;\n  font-weight: 600;\n  line-height: 1;\n  color: #ffbaba;\n`;\n","import { useEffect } from 'react';\nimport { Phonebook } from '../../components/ContactsForm/ContactsForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Wrapper, Title, Subtitle } from './ContactsPage.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selector';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Wrapper>\n      <Title>Phonebook</Title>\n      <Phonebook />\n      <Subtitle>Contacts</Subtitle>\n      {contactList.length > 0 && <Filter />}\n      {contactList.length > 0 && <ContactList />}\n    </Wrapper>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","Label","Input","Button","getContacts","state","contacts","items","getFilter","filters","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","Phonebook","useState","setName","number","setNumber","dispatch","useDispatch","contactList","useSelector","handleChange","evt","target","value","handleCheck","addNewContact","find","alert","addContact","onSubmit","preventDefault","id","nanoid","for","type","onChange","pattern","title","required","Filter","filterContacts","currentTarget","List","Item","ContactList","filteredContactList","map","onClick","deleteContact","Wrapper","Title","Subtitle","useEffect","fetchContacts","length"],"sourceRoot":""}