{"version":3,"file":"static/js/967.def1f336.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selector.js","../node_modules/nanoid/index.browser.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts/ContactsPage.styled.js","pages/Contacts/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 5px;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1;\n  color: rgba(255, 255, 255, 1);\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 10px;\n  border-radius: 3px;\n  height: 22px;\n  padding: 0 10px;\n  border: none;\n\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 0.8;\n`;\n\nexport const Button = styled.button`\n  width: 150px;\n  height: 30px;\n  margin: 0 auto 30px auto;\n  cursor: pointer;\n\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 0.8;\n  color: rgba(255, 255, 255, 1);\n\n  background-color: #0151012e;\n  border: 2px solid rgba(255, 255, 255, 1);\n  border-radius: 5px;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: -2px -1px 24px 1px rgba(255, 255, 255, 1);\n  }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.contacts.items;\n\nexport const getFilter = state => state.contacts.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filters) => {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filters.toLowerCase());\n    });\n  }\n);\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\nimport { Form, Label, Input, Button } from './ContactsForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selector';\nimport { nanoid } from 'nanoid';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const Phonebook = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contactList = useSelector(getContacts);\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const addNewContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    handleCheck(addNewContact);\n    setName('');\n    setNumber('');\n  };\n\n  const handleCheck = addNewContact => {\n    contactList.find(\n      contact => contact.name.toLowerCase() === addNewContact.name.toLowerCase()\n    )\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact(addNewContact));\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label for=\"user_name\">Name</Label>\n      <Input\n        id=\"user_name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <Label for=\"user_tel\">Number</Label>\n\n      <Input\n        id=\"user_tel\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\">Add Contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 5px;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1;\n  color: rgba(255, 255, 255, 1);\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 10px;\n  border-radius: 3px;\n  height: 22px;\n  padding: 0 10px;\n  border: none;\n\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 0.8;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { filterContacts } from 'redux/contacts/contactsSlice';\nimport { Form, Label, Input } from './Filter.styled';\nimport { getFilter } from 'redux/contacts/selector';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handelChange = evt => dispatch(filterContacts(evt.currentTarget.value));\n  return (\n    <Form>\n      <Label for=\"filter\">Find contacts by name</Label>\n\n      <Input\n        id=\"filter\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handelChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  width: 100%;\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 0.8;\n`;\n\nexport const Button = styled.button`\n  text-align: center;\n  width: 70px;\n  height: 20px;\n\n  cursor: pointer;\n\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 0.8;\n  color: rgba(255, 255, 255, 1);\n\n  background-color: #0151012e;\n  border: 2px solid rgba(255, 255, 255, 1);\n  border-radius: 5px;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    box-shadow: -2px -1px 24px 1px rgba(255, 255, 255, 1);\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selector';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { List, Item, Button } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContactList = useSelector(selectVisibleContacts);\n  return (\n    <List>\n      {filteredContactList.map(({ id, name, number }) => (\n        <Item key={id}>\n          {name} : {number}\n          <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: #014101a8;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  margin: 10vw auto 0 auto;\n  width: 300px;\n  height: 100%;\n\n  border-radius: 10px;\n  box-shadow: 5px 11px 18px -10px rgba(97, 165, 255, 0.88);\n`;\n\nexport const Title = styled.h1`\n  margin: 0 0 15px 0;\n  text-align: center;\n  font-size: 26px;\n  font-weight: 600;\n  line-height: 1;\n  color: #ffbaba;\n`;\n\nexport const Subtitle = styled.h2`\n  margin: 0 0 15px 0;\n  text-align: center;\n  font-size: 22px;\n  font-weight: 600;\n  line-height: 1;\n  color: #ffbaba;\n`;\n","import { useEffect } from 'react';\nimport { Phonebook } from '../../components/ContactsForm/ContactsForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Wrapper, Title, Subtitle } from './ContactsPage.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selector';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Wrapper>\n      <Title>Phonebook</Title>\n      <Phonebook />\n      <Subtitle>Contacts</Subtitle>\n      {contactList.length > 0 && <Filter />}\n      {contactList.length > 0 && <ContactList />}\n    </Wrapper>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","Label","Input","Button","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getContacts","state","contacts","items","getFilter","filters","selectVisibleContacts","filter","contact","toLowerCase","includes","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Phonebook","useState","setName","number","setNumber","dispatch","useDispatch","contactList","useSelector","handleChange","evt","target","handleCheck","addNewContact","alert","addContact","onSubmit","preventDefault","for","type","onChange","pattern","title","required","Filter","filterContacts","currentTarget","List","Item","ContactList","filteredContactList","onClick","deleteContact","Wrapper","Title","Subtitle","useEffect","fetchContacts"],"sourceRoot":""}